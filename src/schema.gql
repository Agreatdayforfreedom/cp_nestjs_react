# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Project {
  id: Int!
  title: String!
  description: String!
  owner: User!
  members: [Member!]!
  membersTotal: Int
  status: Boolean
}

type Pagination {
  projects: [Project!]!
  endIndex: Float!
}

type Member {
  id: Int!
  role: String
  ban: String
  project: Project!
  user: User!
  notificationType: String
}

type User {
  id: Int!
  username: String!
  email: String!
  password: String
}

type Profile {
  id: Int!
  username: String!
  email: String!
  password: String
  projectId: Int
  currentProjectMember: Member
}

type Auth {
  token: String!
  user: User!
}

type Query {
  findUsers: [User!]!
  profile: Profile!
  refreshToken(id: Int!, projectId: Int!): Auth!
  findAllProjects: [Project!]!
  findMyProjects: [Project!]!
  findProjectsMemberOf: [Project!]!
  findOneProject(id: Int!): Project!
  findProjectByPage(offset: Int!, limit: Int): Pagination!
  findMembers(projectId: Int!): [Member!]!
}

type Mutation {
  signup(username: String!, email: String!, password: String!): Auth!
  login(username: String!, password: String!): Auth!
  createProject(title: String!, description: String!): Project!
  updateProject(title: String, description: String, id: Int!): Project
  deleteProject(id: Float!): String
  addMember(nextMemberId: Int!, projectId: Int!): Member!
  banMember(memberWhoBanId: Int!, memberToBanId: Int!, banType: String!): Member!
  changeMemberRole(memberId: Int!, roleType: String!): Member!
  removeMember(memberId: Int!, projectId: Int!): String!
}

type Subscription {
  memberSub(userId: Int!, projectId: Int!): Member!
}